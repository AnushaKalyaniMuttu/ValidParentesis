package org.example;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.function.Function;
import java.util.stream.Collectors;

public class ValidParenthesis {

    public static void main(String[] args) {
        String s = "{}[]{";

        Map<Character, Character> openVsClose = new HashMap<>();
        openVsClose.put('{', '}');
        openVsClose.put('[', ']');
        openVsClose.put('(', ')');

        Map<Character, Long> charsVsCount = s.chars().mapToObj(c -> (char) c).collect(Collectors.groupingBy(Function.identity(), Collectors.counting()));

        openVsClose.forEach((key, value) -> {
            if (charsVsCount.get(key) != charsVsCount.get(value)) {
                System.out.println("Not Valid");
            }
        });

    }
}
